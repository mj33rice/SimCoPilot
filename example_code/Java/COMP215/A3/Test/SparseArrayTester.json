{
    "test_case1": "",
    "expected_output1": "**************** SPEED TEST ******************\nTesting the provided, tree-based sparse array.\nDoing the inserts...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nDoing the lookups...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nTesting the linear sparse array.\nDoing the inserts...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nDoing the lookups...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nThe linear took 11.8349% as long as the tree-based\nThe goal is 50.0000% or less.\n**********************************************\n**************** SPEED TEST ******************\nTesting the provided, tree-based sparse array.\nDoing the inserts...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nDoing the lookups...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nTesting the linear sparse array.\nDoing the inserts...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nDoing the lookups...\n0% done 10% done 20% done 30% done 40% done 50% done 60% done 70% done 80% done 90% done \nThe linear took 13.5184% as long as the tree-based\nThe goal is 66.6700% or less.\n**********************************************\n\nThanks for using JUnit! Support its development at https://junit.org/sponsoring\n\n\u001b[36m\u2577\u001b[0m\n\u001b[36m\u251c\u2500\u001b[0m \u001b[36mJUnit Jupiter\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u251c\u2500\u001b[0m \u001b[36mJUnit Vintage\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502  \u2514\u2500\u001b[0m \u001b[36mSparseArrayTester\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestIteratorLinear\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestMoreComplexLinear\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestSpeedFast\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestBackwardsInsertLinear\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestMoreComplexTree\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestRewriteLinear\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestSuperSimpleInsertLinear\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestEmptyIterator\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestStrageOrdeTree\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestSuperSimpleInsertTree\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestRewriteTree\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestStrageOrderLinear\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u251c\u2500\u001b[0m \u001b[34mtestSpeedMedium\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2502     \u2514\u2500\u001b[0m \u001b[34mtestIteratorTree\u001b[0m \u001b[32m\u2714\u001b[0m\n\u001b[36m\u2514\u2500\u001b[0m \u001b[36mJUnit Platform Suite\u001b[0m \u001b[32m\u2714\u001b[0m\n\nTest run finished after 2686 ms\n[         4 containers found      ]\n[         0 containers skipped    ]\n[         4 containers started    ]\n[         0 containers aborted    ]\n[         4 containers successful ]\n[         0 containers failed     ]\n[        14 tests found           ]\n[         0 tests skipped         ]\n[        14 tests started         ]\n[         0 tests aborted         ]\n[        14 tests successful      ]\n[         0 tests failed          ]\n\n"
}