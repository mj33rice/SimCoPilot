{
    "expected_output1": "Running in Debug Mode. (db=True)\nargs:  Namespace(log_wandb=False, wandb_project='offlineILPnPOne', expert_demos=25, offline_demos=75, eval_demos=1, test_demos=0, perc_train=1.0, env_name='OpenAIPickandPlace', num_objs=1, horizon=100, stacking=False, expert_behaviour='0', full_space_as_goal=False, fix_goal=False, fix_object=False, buffer_size=200000, max_pretrain_time_steps=0, max_time_steps=1, batch_size=1, trans_style='random_unsegmented', skill_supervision='none', num_skills=None, wrap_level='1', update_target_interval=20, actor_polyak=0.95, director_polyak=0.95, critic_polyak=0.95, eval_interval=100, visualise_test=False, discount=0.99, replay_regularization=0.05, nu_grad_penalty_coeff=0.0001, cost_grad_penalty_coeff=10, actor_lr=0.003, critic_lr=0.0003, disc_lr=0.0003, clip_obs=200.0, dir_data='/home/mj33/LLMs_Program_Synthesis_Eval/example_code/Python/RL_Motion_Planning/pnp_data', dir_root_log='/home/mj33/LLMs_Program_Synthesis_Eval/example_code/Python/RL_Motion_Planning/./logging/BC/run20240101-000000', dir_summary='/home/mj33/LLMs_Program_Synthesis_Eval/example_code/Python/RL_Motion_Planning/./logging/BC/run20240101-000000/summary', dir_plot='/home/mj33/LLMs_Program_Synthesis_Eval/example_code/Python/RL_Motion_Planning/./logging/BC/run20240101-000000/plots', dir_param='/home/mj33/LLMs_Program_Synthesis_Eval/example_code/Python/RL_Motion_Planning/./logging/BC/run20240101-000000/models', dir_post='./finetuned_models', dir_pre='./pretrained_models', g_dim=3, s_dim=10, a_dim=4, c_dim=3, ag_dim=3)\nidxs:  tf.Tensor(\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n 24], shape=(25,), dtype=int32)\nidxs:  tf.Tensor(\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71\n 72 73 74], shape=(75,), dtype=int32)\nlog_probs:  tf.Tensor([7.1454306], shape=(1,), dtype=float32)\nmu:  tf.Tensor([[ 0.05471174  0.11200762  0.05126194 -0.18048364]], shape=(1, 4), dtype=float32)\nactions:  tf.Tensor([[ 0.09655831  0.07529273  0.10327666 -0.17846565]], shape=(1, 4), dtype=float32)\nlog_probs:  tf.Tensor([[7.1454306]], shape=(1, 1), dtype=float32)\nbuffered_data:  {'prev_goals': <tf.Tensor: shape=(25, 100, 3), dtype=float32, numpy=\narray([[[1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        ...,\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ]],\n\n       [[1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        ...,\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975]],\n\n       [[1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        ...,\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975]],\n\n       ...,\n\n       [[1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        ...,\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ]],\n\n       [[1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        ...,\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376]],\n\n       [[1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        ...,\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975]]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(25, 100, 3), dtype=float32, numpy=\narray([[[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       ...,\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]]], dtype=float32)>, 'states': <tf.Tensor: shape=(25, 101, 10), dtype=float32, numpy=\narray([[[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01, ...,\n          1.44722536e-01, -1.10020630e-01,  2.91834772e-06],\n        [ 1.35264158e+00,  7.74736047e-01,  5.20487487e-01, ...,\n          1.19086862e-01, -9.57514122e-02,  1.95593033e-02],\n        [ 1.36297596e+00,  7.98786342e-01,  5.07043242e-01, ...,\n          9.50365886e-02, -8.22864622e-02,  5.33040762e-02],\n        ...,\n        [ 1.41628015e+00,  6.43093109e-01,  8.15612137e-01, ...,\n          1.39460346e-04, -4.31761472e-03,  2.40546763e-02],\n        [ 1.41628480e+00,  6.43092752e-01,  8.15634906e-01, ...,\n          1.36405753e-04, -4.33769636e-03,  2.40546353e-02],\n        [ 1.41628957e+00,  6.43092990e-01,  8.15657616e-01, ...,\n          1.33638430e-04, -4.35777102e-03,  2.40545440e-02]],\n\n       [[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01, ...,\n         -1.42286867e-01, -1.10020630e-01,  2.91834772e-06],\n        [ 1.34289253e+00,  7.24010646e-01,  5.20616472e-01, ...,\n         -1.17197111e-01, -9.58804488e-02,  2.11350620e-02],\n        [ 1.34389281e+00,  7.00447381e-01,  5.07258952e-01, ...,\n         -9.36338976e-02, -8.25021863e-02,  5.28451428e-02],\n        ...,\n        [ 1.22458434e+00,  5.99182606e-01,  4.23005551e-01, ...,\n          2.42035348e-05,  1.50725630e-03,  2.40581688e-02],\n        [ 1.22458386e+00,  5.99182129e-01,  4.22882587e-01, ...,\n          2.90558273e-05,  1.63005979e-03,  2.40583923e-02],\n        [ 1.22458339e+00,  5.99182427e-01,  4.22759652e-01, ...,\n          2.24799878e-05,  1.75292417e-03,  2.40594707e-02]],\n\n       [[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01, ...,\n          1.09534040e-01, -1.10020630e-01,  2.91834772e-06],\n        [ 1.35349000e+00,  7.68508494e-01,  5.20479858e-01, ...,\n          9.01259407e-02, -9.57437977e-02,  1.97527148e-02],\n        [ 1.36462820e+00,  7.86713481e-01,  5.07034898e-01, ...,\n          7.19208941e-02, -8.22781548e-02,  5.34659699e-02],\n        ...,\n        [ 1.19595993e+00,  8.75612020e-01,  4.22814667e-01, ...,\n          7.62305717e-05,  1.70144136e-03,  2.40577292e-02],\n        [ 1.19595861e+00,  8.75611961e-01,  4.22690660e-01, ...,\n          7.62804048e-05,  1.82544847e-03,  2.40576435e-02],\n        [ 1.19595730e+00,  8.75611901e-01,  4.22566652e-01, ...,\n          7.63305943e-05,  1.94946700e-03,  2.40575578e-02]],\n\n       ...,\n\n       [[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01, ...,\n         -1.49749666e-01, -1.10020630e-01,  2.91834772e-06],\n        [ 1.31722569e+00,  7.23038018e-01,  5.20869553e-01, ...,\n         -1.23687297e-01, -9.61335078e-02,  2.11667120e-02],\n        [ 1.29366624e+00,  6.98529601e-01,  5.07708192e-01, ...,\n         -9.91789177e-02, -8.29514563e-02,  5.28685711e-02],\n        ...,\n        [ 1.34411323e+00,  8.71116817e-01,  9.12181854e-01, ...,\n          2.51226622e-04, -3.28423246e-03,  2.41433121e-02],\n        [ 1.34412694e+00,  8.71120095e-01,  9.12228882e-01, ...,\n          2.47531105e-04, -3.31810885e-03,  2.41417624e-02],\n        [ 1.34414077e+00,  8.71123791e-01,  9.12275732e-01, ...,\n          2.66814837e-04, -3.34909419e-03,  2.41478719e-02]],\n\n       [[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01, ...,\n         -1.38095379e-01, -1.10020630e-01,  2.91834772e-06],\n        [ 1.36128914e+00,  7.24535048e-01,  5.20371377e-01, ...,\n         -1.13530077e-01, -9.56353322e-02,  2.11176965e-02],\n        [ 1.37986183e+00,  7.01523542e-01,  5.06854177e-01, ...,\n         -9.05185416e-02, -8.20974037e-02,  5.28317317e-02],\n        ...,\n        [ 1.19674480e+00,  7.74260104e-01,  8.37916136e-01, ...,\n          1.57178434e-07, -3.50120361e-03,  2.43050326e-02],\n        [ 1.19674528e+00,  7.74260044e-01,  8.37963045e-01, ...,\n          1.57070616e-07, -3.54863377e-03,  2.43050307e-02],\n        [ 1.19674587e+00,  7.74259984e-01,  8.38010073e-01, ...,\n          1.57666847e-07, -3.59606440e-03,  2.43050288e-02]],\n\n       [[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01, ...,\n         -1.12813376e-01, -1.10020630e-01,  2.91834772e-06],\n        [ 1.33768010e+00,  7.29259729e-01,  5.20677984e-01, ...,\n         -9.29727107e-02, -9.59419310e-02,  2.09721811e-02],\n        [ 1.33368027e+00,  7.10619211e-01,  5.07367313e-01, ...,\n         -7.43322298e-02, -8.26105401e-02,  5.27241528e-02],\n        ...,\n        [ 1.38843536e+00,  8.58828545e-01,  4.24321830e-01, ...,\n          2.03316267e-05,  1.96190827e-04,  2.40605883e-02],\n        [ 1.38843501e+00,  8.58828545e-01,  4.24200237e-01, ...,\n          2.03509171e-05,  3.17761616e-04,  2.40605026e-02],\n        [ 1.38843465e+00,  8.58828485e-01,  4.24078643e-01, ...,\n          2.03699074e-05,  4.39338823e-04,  2.40604188e-02]]],\n      dtype=float32)>, 'env_goals': <tf.Tensor: shape=(25, 101, 3), dtype=float32, numpy=\narray([[[1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        ...,\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ]],\n\n       [[1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        ...,\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975]],\n\n       [[1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        ...,\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975]],\n\n       ...,\n\n       [[1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        ...,\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ]],\n\n       [[1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        ...,\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376]],\n\n       [[1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        ...,\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975]]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(25, 100, 3), dtype=float32, numpy=\narray([[[1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        ...,\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ],\n        [1.4651575 , 0.6374445 , 0.7365619 ]],\n\n       [[1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        ...,\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975],\n        [1.2260816 , 0.5992361 , 0.42469975]],\n\n       [[1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        ...,\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975],\n        [1.2007787 , 0.87566507, 0.42469975]],\n\n       ...,\n\n       [[1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        ...,\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ],\n        [1.4107647 , 0.8828436 , 0.8603619 ]],\n\n       [[1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        ...,\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376],\n        [1.2101126 , 0.7742591 , 0.83559376]],\n\n       [[1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        ...,\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975],\n        [1.3895105 , 0.8588096 , 0.42469975]]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(25, 100, 3), dtype=float32, numpy=\narray([[[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       ...,\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(25, 100, 10), dtype=float32, numpy=\narray([[[ 1.3526416e+00,  7.7473605e-01,  5.2048749e-01, ...,\n          1.1908686e-01, -9.5751412e-02,  1.9559303e-02],\n        [ 1.3629760e+00,  7.9878634e-01,  5.0704324e-01, ...,\n          9.5036589e-02, -8.2286462e-02,  5.3304076e-02],\n        [ 1.3711663e+00,  8.1761694e-01,  4.9654859e-01, ...,\n          7.6205947e-02, -7.1780004e-02,  5.0304726e-02],\n        ...,\n        [ 1.4162802e+00,  6.4309311e-01,  8.1561214e-01, ...,\n          1.3946035e-04, -4.3176147e-03,  2.4054676e-02],\n        [ 1.4162848e+00,  6.4309275e-01,  8.1563491e-01, ...,\n          1.3640575e-04, -4.3376964e-03,  2.4054635e-02],\n        [ 1.4162896e+00,  6.4309299e-01,  8.1565762e-01, ...,\n          1.3363843e-04, -4.3577710e-03,  2.4054544e-02]],\n\n       [[ 1.3428925e+00,  7.2401065e-01,  5.2061647e-01, ...,\n         -1.1719711e-01, -9.5880449e-02,  2.1135062e-02],\n        [ 1.3438928e+00,  7.0044738e-01,  5.0725895e-01, ...,\n         -9.3633898e-02, -8.2502186e-02,  5.2845143e-02],\n        [ 1.3447362e+00,  6.8194622e-01,  4.9678737e-01, ...,\n         -7.5132728e-02, -7.2018772e-02,  5.0254010e-02],\n        ...,\n        [ 1.2245843e+00,  5.9918261e-01,  4.2300555e-01, ...,\n          2.4203535e-05,  1.5072563e-03,  2.4058169e-02],\n        [ 1.2245839e+00,  5.9918213e-01,  4.2288259e-01, ...,\n          2.9055827e-05,  1.6300598e-03,  2.4058392e-02],\n        [ 1.2245834e+00,  5.9918243e-01,  4.2275965e-01, ...,\n          2.2479988e-05,  1.7529242e-03,  2.4059471e-02]],\n\n       [[ 1.3534900e+00,  7.6850849e-01,  5.2047986e-01, ...,\n          9.0125941e-02, -9.5743798e-02,  1.9752715e-02],\n        [ 1.3646282e+00,  7.8671348e-01,  5.0703490e-01, ...,\n          7.1920894e-02, -8.2278155e-02,  5.3465970e-02],\n        [ 1.3734282e+00,  8.0096573e-01,  4.9654317e-01, ...,\n          5.7668697e-02, -7.1774580e-02,  5.0315812e-02],\n        ...,\n        [ 1.1959599e+00,  8.7561202e-01,  4.2281467e-01, ...,\n          7.6230572e-05,  1.7014414e-03,  2.4057729e-02],\n        [ 1.1959586e+00,  8.7561196e-01,  4.2269066e-01, ...,\n          7.6280405e-05,  1.8254485e-03,  2.4057643e-02],\n        [ 1.1959573e+00,  8.7561190e-01,  4.2256665e-01, ...,\n          7.6330594e-05,  1.9494670e-03,  2.4057558e-02]],\n\n       ...,\n\n       [[ 1.3172257e+00,  7.2303802e-01,  5.2086955e-01, ...,\n         -1.2368730e-01, -9.6133508e-02,  2.1166712e-02],\n        [ 1.2936662e+00,  6.9852960e-01,  5.0770819e-01, ...,\n         -9.9178918e-02, -8.2951456e-02,  5.2868571e-02],\n        [ 1.2752974e+00,  6.7915183e-01,  4.9731460e-01, ...,\n         -7.9801157e-02, -7.2546013e-02,  5.0255574e-02],\n        ...,\n        [ 1.3441132e+00,  8.7111682e-01,  9.1218185e-01, ...,\n          2.5122662e-04, -3.2842325e-03,  2.4143312e-02],\n        [ 1.3441269e+00,  8.7112010e-01,  9.1222888e-01, ...,\n          2.4753110e-04, -3.3181089e-03,  2.4141762e-02],\n        [ 1.3441408e+00,  8.7112379e-01,  9.1227573e-01, ...,\n          2.6681484e-04, -3.3490942e-03,  2.4147872e-02]],\n\n       [[ 1.3612891e+00,  7.2453505e-01,  5.2037138e-01, ...,\n         -1.1353008e-01, -9.5635332e-02,  2.1117697e-02],\n        [ 1.3798618e+00,  7.0152354e-01,  5.0685418e-01, ...,\n         -9.0518542e-02, -8.2097404e-02,  5.2831732e-02],\n        [ 1.3945311e+00,  6.8355173e-01,  4.9634400e-01, ...,\n         -7.2546758e-02, -7.1575403e-02,  5.0253116e-02],\n        ...,\n        [ 1.1967448e+00,  7.7426010e-01,  8.3791614e-01, ...,\n          1.5717843e-07, -3.5012036e-03,  2.4305033e-02],\n        [ 1.1967453e+00,  7.7426004e-01,  8.3796304e-01, ...,\n          1.5707062e-07, -3.5486338e-03,  2.4305031e-02],\n        [ 1.1967459e+00,  7.7425998e-01,  8.3801007e-01, ...,\n          1.5766685e-07, -3.5960644e-03,  2.4305029e-02]],\n\n       [[ 1.3376801e+00,  7.2925973e-01,  5.2067798e-01, ...,\n         -9.2972711e-02, -9.5941931e-02,  2.0972181e-02],\n        [ 1.3336803e+00,  7.1061921e-01,  5.0736731e-01, ...,\n         -7.4332230e-02, -8.2610540e-02,  5.2724153e-02],\n        [ 1.3305756e+00,  6.9596153e-01,  4.9691311e-01, ...,\n         -5.9674524e-02, -7.2144501e-02,  5.0245840e-02],\n        ...,\n        [ 1.3884354e+00,  8.5882854e-01,  4.2432183e-01, ...,\n          2.0331627e-05,  1.9619083e-04,  2.4060588e-02],\n        [ 1.3884350e+00,  8.5882854e-01,  4.2420024e-01, ...,\n          2.0350917e-05,  3.1776162e-04,  2.4060503e-02],\n        [ 1.3884346e+00,  8.5882849e-01,  4.2407864e-01, ...,\n          2.0369907e-05,  4.3933882e-04,  2.4060419e-02]]], dtype=float32)>, 'actions': <tf.Tensor: shape=(25, 100, 4), dtype=float32, numpy=\narray([[[ 3.8422304e-01,  8.6833525e-01, -4.8012379e-01,  1.0000000e-01],\n        [ 3.1996959e-01,  7.1452117e-01, -3.9450848e-01,  1.0000000e-01],\n        [ 2.5796312e-01,  5.7021952e-01, -3.1371877e-01,  1.0000000e-01],\n        ...,\n        [ 2.3794913e-01, -3.4747124e-02,  1.5162012e-01, -1.0000000e-01],\n        [ 2.3793125e-01, -3.4728169e-02,  1.5160403e-01, -1.0000000e-01],\n        [ 2.3791409e-01, -3.4707785e-02,  1.5158829e-01, -1.0000000e-01]],\n\n       [[ 4.0847633e-02, -8.5372120e-01, -4.8012379e-01,  1.0000000e-01],\n        [ 3.5088100e-02, -7.0318270e-01, -3.9528269e-01,  1.0000000e-01],\n        [ 2.9086836e-02, -5.6180340e-01, -3.1501311e-01,  1.0000000e-01],\n        ...,\n        [-6.4086914e-04,  1.8739700e-04,  1.1222363e-03, -1.0000000e-01],\n        [-6.4086914e-04,  1.7559528e-04,  1.1216998e-03, -1.0000000e-01],\n        [-6.3943863e-04,  1.4948845e-04,  1.1225939e-03, -1.0000000e-01]],\n\n       [[ 4.1144454e-01,  6.5720427e-01, -4.8012379e-01,  1.0000000e-01],\n        [ 3.4210068e-01,  5.4075563e-01, -3.9446279e-01,  1.0000000e-01],\n        [ 2.7527112e-01,  4.3152535e-01, -3.1366894e-01,  1.0000000e-01],\n        ...,\n        [-5.9437752e-04, -1.3911724e-04,  1.1018515e-03, -1.0000000e-01],\n        [-5.9366226e-04, -1.3911724e-04,  1.1018515e-03, -1.0000000e-01],\n        [-5.9294701e-04, -1.3911724e-04,  1.1018515e-03, -1.0000000e-01]],\n\n       ...,\n\n       [[-8.4807998e-01, -8.9849800e-01, -4.8012379e-01,  1.0000000e-01],\n        [-6.9983822e-01, -7.4212378e-01, -3.9680105e-01,  1.0000000e-01],\n        [-5.5848140e-01, -5.9507352e-01, -3.1770873e-01,  1.0000000e-01],\n        ...,\n        [ 3.3584976e-01,  6.8828702e-02,  3.0886015e-01, -1.0000000e-01],\n        [ 3.3580256e-01,  6.8853378e-02,  3.0878541e-01, -1.0000000e-01],\n        [ 3.3574748e-01,  6.8855882e-02,  3.0870673e-01, -1.0000000e-01]],\n\n       [[ 6.8963569e-01, -8.2857227e-01, -4.8012379e-01,  1.0000000e-01],\n        [ 5.7349646e-01, -6.8118048e-01, -3.9381200e-01,  1.0000000e-01],\n        [ 4.6206066e-01, -5.4311126e-01, -3.1258443e-01,  1.0000000e-01],\n        ...,\n        [-1.9526482e-04, -7.8678131e-06,  7.0688725e-03, -1.0000000e-01],\n        [-1.9240379e-04, -7.1525574e-06,  7.0728064e-03, -1.0000000e-01],\n        [-1.8954277e-04, -6.7949295e-06,  7.0760250e-03, -1.0000000e-01]],\n\n       [[-1.4333239e-01, -6.7688024e-01, -4.8012379e-01,  1.0000000e-01],\n        [-1.1781744e-01, -5.5783629e-01, -3.9565158e-01,  1.0000000e-01],\n        [-9.3818441e-02, -4.4599336e-01, -3.1566325e-01,  1.0000000e-01],\n        ...,\n        [-1.3117790e-03, -2.3567677e-04,  1.0902286e-03, -1.0000000e-01],\n        [-1.3124943e-03, -2.3567677e-04,  1.0904074e-03, -1.0000000e-01],\n        [-1.3124943e-03, -2.3567677e-04,  1.0905862e-03, -1.0000000e-01]]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(25, 100), dtype=float32, numpy=\narray([[0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 1., 1., 1.],\n       [0., 0., 0., ..., 1., 1., 1.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 1., 1., 1.],\n       [0., 0., 0., ..., 1., 1., 1.]], dtype=float32)>, 'distances': <tf.Tensor: shape=(25, 100), dtype=float32, numpy=\narray([[4.0800545e-01, 4.0798962e-01, 4.0798056e-01, ..., 8.4799759e-02,\n        8.4800504e-02, 8.4801316e-02],\n       [1.2289275e-01, 1.2289275e-01, 1.2289275e-01, ..., 2.1723655e-04,\n        2.1673575e-04, 2.1766646e-04],\n       [2.1041839e-01, 2.1041839e-01, 2.1041839e-01, ..., 2.0989719e-04,\n        2.0985036e-04, 2.0981091e-04],\n       ...,\n       [5.6063646e-01, 5.6062037e-01, 5.6061119e-01, ..., 7.4964836e-02,\n        7.4966565e-02, 7.4963011e-02],\n       [5.0630635e-01, 5.0628954e-01, 5.0627995e-01, ..., 1.1792323e-03,\n        1.1797420e-03, 1.1801411e-03],\n       [2.3371732e-01, 2.3371734e-01, 2.3371734e-01, ..., 2.8706162e-04,\n        2.8707186e-04, 2.8707722e-04]], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(25, 100), dtype=float32, numpy=\narray([[1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.],\n       ...,\n       [1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.]], dtype=float32)>}\nbuffered_data:  {'prev_goals': <tf.Tensor: shape=(75, 100, 3), dtype=float32, numpy=\narray([[[1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        ...,\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125]],\n\n       [[1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        ...,\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975]],\n\n       [[1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        ...,\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975]],\n\n       ...,\n\n       [[1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        ...,\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875]],\n\n       [[1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        ...,\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884]],\n\n       [[1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        ...,\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725]]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(75, 100, 3), dtype=float32, numpy=\narray([[[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 1., 0.],\n        [0., 1., 0.],\n        [0., 1., 0.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       ...,\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]]], dtype=float32)>, 'states': <tf.Tensor: shape=(75, 101, 10), dtype=float32, numpy=\narray([[[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01, ...,\n          2.3726230e-02, -1.1002063e-01,  2.9183477e-06],\n        [ 1.3617098e+00,  7.5319719e-01,  5.2061820e-01, ...,\n          1.9629380e-02, -9.5882140e-02,  1.7532524e-02],\n        [ 1.3400266e+00,  7.7425563e-01,  4.9648100e-01, ...,\n         -1.4290416e-03, -7.1724251e-02,  5.4197632e-02],\n        ...,\n        [ 1.1716571e+00,  7.6818955e-01,  1.0502663e+00, ...,\n          8.5182174e-04, -6.2548172e-01,  2.1219478e-06],\n        [ 1.1717499e+00,  7.6866901e-01,  1.0504711e+00, ...,\n          3.7235444e-04, -6.2568653e-01,  4.4922479e-07],\n        [ 1.1716768e+00,  7.6887441e-01,  1.0505910e+00, ...,\n          1.6697033e-04, -6.2580651e-01,  8.1877379e-06]],\n\n       [[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01, ...,\n         -3.9318662e-02, -1.1002063e-01,  2.9183477e-06],\n        [ 1.3172100e+00,  7.4169433e-01,  5.2062958e-01, ...,\n         -3.1912599e-02, -9.5893554e-02,  2.1512333e-02],\n        [ 1.2934580e+00,  7.3537266e-01,  5.0768071e-01, ...,\n         -2.5590962e-02, -8.2923964e-02,  5.3780839e-02],\n        ...,\n        [ 1.3190315e+00,  6.8077332e-01,  4.2386687e-01, ...,\n          7.5789852e-05,  1.9875604e-03,  2.3983501e-02],\n        [ 1.3209200e+00,  6.8088007e-01,  4.2412817e-01, ...,\n          8.6268483e-05,  1.9648375e-03,  2.3995928e-02],\n        [ 1.3223063e+00,  6.8127578e-01,  4.2455819e-01, ...,\n          1.0119921e-04,  1.9440239e-03,  2.4010818e-02]],\n\n       [[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01, ...,\n         -8.5866354e-02, -1.1002063e-01,  2.9183477e-06],\n        [ 1.3638145e+00,  7.3369372e-01,  5.2053118e-01, ...,\n         -7.0459723e-02, -9.5795155e-02,  1.6556645e-02],\n        [ 1.3842221e+00,  7.1921694e-01,  5.0656176e-01, ...,\n         -5.5982910e-02, -8.1805013e-02,  5.3090598e-02],\n        ...,\n        [ 1.0411141e+00,  8.4163719e-01,  1.0247031e+00, ...,\n         -1.3913001e-01, -5.9991860e-01,  2.2928840e-05],\n        [ 1.0337723e+00,  8.4436530e-01,  1.0246547e+00, ...,\n         -1.4185807e-01, -5.9987026e-01, -2.3654156e-06],\n        [ 1.0263503e+00,  8.4705782e-01,  1.0244482e+00, ...,\n         -1.4455058e-01, -5.9966362e-01,  9.6632157e-06]],\n\n       ...,\n\n       [[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01, ...,\n         -8.8400468e-02, -1.1002063e-01,  2.9183477e-06],\n        [ 1.3201729e+00,  7.3394239e-01,  5.2041423e-01, ...,\n         -7.3242508e-02, -9.5678203e-02,  1.9628899e-02],\n        [ 1.2997508e+00,  7.1988434e-01,  5.0694603e-01, ...,\n         -5.9184454e-02, -8.2189269e-02,  5.3241584e-02],\n        ...,\n        [ 1.4133915e+00,  6.5990579e-01,  6.6920459e-01, ...,\n          7.2750023e-05, -8.9123268e-03,  2.4039693e-02],\n        [ 1.4133925e+00,  6.6037375e-01,  6.6858244e-01, ...,\n          3.8470673e-05, -8.9297919e-03,  2.4006674e-02],\n        [ 1.4140189e+00,  6.6058260e-01,  6.6843247e-01, ...,\n          4.1168652e-05, -8.9435494e-03,  2.4011295e-02]],\n\n       [[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01, ...,\n         -7.1924195e-02, -1.1002063e-01,  2.9183477e-06],\n        [ 1.3284076e+00,  7.3615783e-01,  5.2122802e-01, ...,\n         -5.8981657e-02, -9.6491978e-02,  2.2820339e-02],\n        [ 1.3154602e+00,  7.2391498e-01,  5.0775826e-01, ...,\n         -4.6738826e-02, -8.3001509e-02,  5.3466160e-02],\n        ...,\n        [ 1.1451126e+00,  6.1380929e-01,  1.0488319e+00, ...,\n          3.0022061e-01, -6.2404752e-01,  1.0380211e-04],\n        [ 1.1425636e+00,  6.0224807e-01,  1.0487647e+00, ...,\n          3.1178182e-01, -6.2398028e-01,  7.9945756e-05],\n        [ 1.1394737e+00,  5.9034866e-01,  1.0486066e+00, ...,\n          3.2368124e-01, -6.2382215e-01,  4.0922074e-05]],\n\n       [[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01, ...,\n          7.0165023e-02, -1.1002063e-01,  2.9183477e-06],\n        [ 1.3650535e+00,  7.6206625e-01,  5.2076983e-01, ...,\n          5.7199143e-02, -9.6033782e-02,  1.7104324e-02],\n        [ 1.3874339e+00,  7.7381068e-01,  5.0698245e-01, ...,\n          4.5454700e-02, -8.2225688e-02,  5.3136639e-02],\n        ...,\n        [ 1.1420729e+00,  4.5600596e-01,  1.0178283e+00, ...,\n          3.2990628e-01, -5.9304380e-01,  4.7797874e-02],\n        [ 1.1380287e+00,  4.4949621e-01,  1.0214070e+00, ...,\n          3.3641601e-01, -5.9662247e-01,  2.4563579e-02],\n        [ 1.1336318e+00,  4.4307733e-01,  1.0233948e+00, ...,\n          3.4283489e-01, -5.9861034e-01, -2.8383607e-04]]], dtype=float32)>, 'env_goals': <tf.Tensor: shape=(75, 101, 3), dtype=float32, numpy=\narray([[[1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        ...,\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125]],\n\n       [[1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        ...,\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975]],\n\n       [[1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        ...,\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975]],\n\n       ...,\n\n       [[1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        ...,\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875]],\n\n       [[1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        ...,\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884]],\n\n       [[1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        ...,\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725]]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(75, 100, 3), dtype=float32, numpy=\narray([[[1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        ...,\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125],\n        [1.4781134 , 0.77005064, 0.59050125]],\n\n       [[1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        ...,\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975],\n        [1.2323347 , 0.6024706 , 0.42469975]],\n\n       [[1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        ...,\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975],\n        [1.3195916 , 0.71052444, 0.42469975]],\n\n       ...,\n\n       [[1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        ...,\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875],\n        [1.4185061 , 0.6606839 , 0.65883875]],\n\n       [[1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        ...,\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884],\n        [1.2894231 , 0.86276495, 0.78157884]],\n\n       [[1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        ...,\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725],\n        [1.4292765 , 0.7139475 , 0.68595725]]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(75, 100, 3), dtype=float32, numpy=\narray([[[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 1., 0.],\n        [0., 1., 0.],\n        [0., 1., 0.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       ...,\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]],\n\n       [[1., 0., 0.],\n        [1., 0., 0.],\n        [1., 0., 0.],\n        ...,\n        [0., 0., 1.],\n        [0., 0., 1.],\n        [0., 0., 1.]]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(75, 100, 10), dtype=float32, numpy=\narray([[[ 1.3617098e+00,  7.5319719e-01,  5.2061820e-01, ...,\n          1.9629380e-02, -9.5882140e-02,  1.7532524e-02],\n        [ 1.3400266e+00,  7.7425563e-01,  4.9648100e-01, ...,\n         -1.4290416e-03, -7.1724251e-02,  5.4197632e-02],\n        [ 1.3568971e+00,  7.7594948e-01,  4.8629785e-01, ...,\n         -3.1229011e-03, -6.1529249e-02,  5.0354030e-02],\n        ...,\n        [ 1.1716571e+00,  7.6818955e-01,  1.0502663e+00, ...,\n          8.5182174e-04, -6.2548172e-01,  2.1219478e-06],\n        [ 1.1717499e+00,  7.6866901e-01,  1.0504711e+00, ...,\n          3.7235444e-04, -6.2568653e-01,  4.4922479e-07],\n        [ 1.1716768e+00,  7.6887441e-01,  1.0505910e+00, ...,\n          1.6697033e-04, -6.2580651e-01,  8.1877379e-06]],\n\n       [[ 1.3172100e+00,  7.4169433e-01,  5.2062958e-01, ...,\n         -3.1912599e-02, -9.5893554e-02,  2.1512333e-02],\n        [ 1.2934580e+00,  7.3537266e-01,  5.0768071e-01, ...,\n         -2.5590962e-02, -8.2923964e-02,  5.3780839e-02],\n        [ 1.2753544e+00,  7.3043990e-01,  4.9747545e-01, ...,\n         -2.0658201e-02, -7.2706863e-02,  5.0317705e-02],\n        ...,\n        [ 1.3190315e+00,  6.8077332e-01,  4.2386687e-01, ...,\n          7.5789852e-05,  1.9875604e-03,  2.3983501e-02],\n        [ 1.3209200e+00,  6.8088007e-01,  4.2412817e-01, ...,\n          8.6268483e-05,  1.9648375e-03,  2.3995928e-02],\n        [ 1.3223063e+00,  6.8127578e-01,  4.2455819e-01, ...,\n          1.0119921e-04,  1.9440239e-03,  2.4010818e-02]],\n\n       [[ 1.3638145e+00,  7.3369372e-01,  5.2053118e-01, ...,\n         -7.0459723e-02, -9.5795155e-02,  1.6556645e-02],\n        [ 1.3842221e+00,  7.1921694e-01,  5.0656176e-01, ...,\n         -5.5982910e-02, -8.1805013e-02,  5.3090598e-02],\n        [ 1.4009780e+00,  7.0831430e-01,  4.9597520e-01, ...,\n         -4.5080293e-02, -7.1206592e-02,  5.0359111e-02],\n        ...,\n        [ 1.0411141e+00,  8.4163719e-01,  1.0247031e+00, ...,\n         -1.3913001e-01, -5.9991860e-01,  2.2928840e-05],\n        [ 1.0337723e+00,  8.4436530e-01,  1.0246547e+00, ...,\n         -1.4185807e-01, -5.9987026e-01, -2.3654156e-06],\n        [ 1.0263503e+00,  8.4705782e-01,  1.0244482e+00, ...,\n         -1.4455058e-01, -5.9966362e-01,  9.6632157e-06]],\n\n       ...,\n\n       [[ 1.3201729e+00,  7.3394239e-01,  5.2041423e-01, ...,\n         -7.3242508e-02, -9.5678203e-02,  1.9628899e-02],\n        [ 1.2997508e+00,  7.1988434e-01,  5.0694603e-01, ...,\n         -5.9184454e-02, -8.2189269e-02,  5.3241584e-02],\n        [ 1.2836632e+00,  7.0819050e-01,  4.9670470e-01, ...,\n         -4.7490627e-02, -7.1936116e-02,  5.0300542e-02],\n        ...,\n        [ 1.4133915e+00,  6.5990579e-01,  6.6920459e-01, ...,\n          7.2750023e-05, -8.9123268e-03,  2.4039693e-02],\n        [ 1.4133925e+00,  6.6037375e-01,  6.6858244e-01, ...,\n          3.8470673e-05, -8.9297919e-03,  2.4006674e-02],\n        [ 1.4140189e+00,  6.6058260e-01,  6.6843247e-01, ...,\n          4.1168652e-05, -8.9435494e-03,  2.4011295e-02]],\n\n       [[ 1.3284076e+00,  7.3615783e-01,  5.2122802e-01, ...,\n         -5.8981657e-02, -9.6491978e-02,  2.2820339e-02],\n        [ 1.3154602e+00,  7.2391498e-01,  5.0775826e-01, ...,\n         -4.6738826e-02, -8.3001509e-02,  5.3466160e-02],\n        [ 1.3054415e+00,  7.1502608e-01,  4.9715173e-01, ...,\n         -3.7849933e-02, -7.2383143e-02,  5.0286770e-02],\n        ...,\n        [ 1.1451126e+00,  6.1380929e-01,  1.0488319e+00, ...,\n          3.0022061e-01, -6.2404752e-01,  1.0380211e-04],\n        [ 1.1425636e+00,  6.0224807e-01,  1.0487647e+00, ...,\n          3.1178182e-01, -6.2398028e-01,  7.9945756e-05],\n        [ 1.1394737e+00,  5.9034866e-01,  1.0486066e+00, ...,\n          3.2368124e-01, -6.2382215e-01,  4.0922074e-05]],\n\n       [[ 1.3650535e+00,  7.6206625e-01,  5.2076983e-01, ...,\n          5.7199143e-02, -9.6033782e-02,  1.7104324e-02],\n        [ 1.3874339e+00,  7.7381068e-01,  5.0698245e-01, ...,\n          4.5454700e-02, -8.2225688e-02,  5.3136639e-02],\n        [ 1.4056306e+00,  7.8302592e-01,  4.9621564e-01, ...,\n          3.6239434e-02, -7.1447045e-02,  5.0404187e-02],\n        ...,\n        [ 1.1420729e+00,  4.5600596e-01,  1.0178283e+00, ...,\n          3.2990628e-01, -5.9304380e-01,  4.7797874e-02],\n        [ 1.1380287e+00,  4.4949621e-01,  1.0214070e+00, ...,\n          3.3641601e-01, -5.9662247e-01,  2.4563579e-02],\n        [ 1.1336318e+00,  4.4307733e-01,  1.0233948e+00, ...,\n          3.4283489e-01, -5.9861034e-01, -2.8383607e-04]]], dtype=float32)>, 'actions': <tf.Tensor: shape=(75, 100, 4), dtype=float32, numpy=\narray([[[ 6.99217916e-01,  1.38414890e-01, -4.71670479e-01,\n          8.67546946e-02],\n        [-8.35061014e-01,  7.08411276e-01, -7.76749551e-01,\n          6.89567029e-01],\n        [ 7.16373146e-01, -1.83789600e-02, -2.57870495e-01,\n          9.22747552e-02],\n        ...,\n        [-9.85185616e-03,  1.24535309e-02,  1.00000000e+00,\n         -9.64286104e-02],\n        [ 9.15108062e-03,  1.78981423e-02,  9.97733891e-01,\n         -1.11442283e-01],\n        [-4.07110061e-03,  7.47713447e-03,  9.85080183e-01,\n         -1.11393265e-01]],\n\n       [[-8.54116321e-01, -2.55380720e-01, -4.88600731e-01,\n          1.04551822e-01],\n        [-7.11106002e-01, -1.88771188e-01, -3.88833374e-01,\n          1.05169430e-01],\n        [-5.51235020e-01, -1.51995987e-01, -3.12767059e-01,\n          9.80970412e-02],\n        ...,\n        [ 3.38924192e-02,  7.06378417e-03,  1.52097046e-02,\n         -9.13871825e-02],\n        [ 6.17926195e-02,  2.61165947e-03,  1.08503131e-02,\n         -8.51178840e-02],\n        [ 4.04872186e-02,  1.32865058e-02,  1.74049251e-02,\n         -1.01986222e-01]],\n\n       [[ 7.76119947e-01, -5.18978953e-01, -4.73539472e-01,\n          7.89862275e-02],\n        [ 6.24740422e-01, -4.28530753e-01, -4.09411758e-01,\n          1.11191019e-01],\n        [ 5.29552042e-01, -3.27752173e-01, -3.12826484e-01,\n          1.01045415e-01],\n        ...,\n        [-3.05660397e-01,  2.81617995e-02,  6.07060432e-01,\n         -9.88344699e-02],\n        [-2.99455076e-01,  5.05852401e-02,  6.12524331e-01,\n         -8.86996910e-02],\n        [-3.05266529e-01,  4.58359793e-02,  5.88196993e-01,\n         -1.09094515e-01]],\n\n       ...,\n\n       [[-7.50669062e-01, -5.21814287e-01, -4.95204240e-01,\n          9.41122845e-02],\n        [-6.08465254e-01, -4.24178690e-01, -4.04969275e-01,\n          1.05105013e-01],\n        [-4.92117137e-01, -3.60996783e-01, -3.11352730e-01,\n          9.94670838e-02],\n        ...,\n        [-1.17298309e-02,  5.16482629e-03, -5.28542791e-03,\n         -9.70931947e-02],\n        [ 2.50732410e-05,  1.54316463e-02, -1.71474982e-02,\n         -9.54952836e-02],\n        [ 2.16943882e-02,  5.38027566e-03,  1.29761384e-03,\n         -1.17450379e-01]],\n\n       [[-4.67480272e-01, -4.43656117e-01, -4.64464664e-01,\n          1.10133298e-01],\n        [-3.88004005e-01, -3.68608266e-01, -4.06280637e-01,\n          1.07235774e-01],\n        [-3.06244820e-01, -2.68727332e-01, -3.21550220e-01,\n          1.13286369e-01],\n        ...,\n        [-4.65416461e-01, -2.94392347e-01,  9.88729179e-01,\n         -1.11667916e-01],\n        [-4.50551987e-01, -3.05936992e-01,  1.00000000e+00,\n         -1.29950911e-01],\n        [-4.63931710e-01, -3.17706704e-01,  9.97726798e-01,\n         -1.11613773e-01]],\n\n       [[ 8.19982886e-01,  4.36983377e-01, -4.64736462e-01,\n          8.60025659e-02],\n        [ 6.89558446e-01,  3.45736414e-01, -4.03445750e-01,\n          8.60171244e-02],\n        [ 5.74183583e-01,  2.79194027e-01, -3.19035023e-01,\n          9.55902562e-02],\n        ...,\n        [ 1.78900898e-01, -4.48702455e-01,  1.00000000e+00,\n         -8.76866430e-02],\n        [ 1.89251512e-01, -4.38362241e-01,  9.93968070e-01,\n         -9.38492790e-02],\n        [ 1.87585875e-01, -4.43427950e-01,  9.92734909e-01,\n         -9.43355784e-02]]], dtype=float32)>, 'successes': <tf.Tensor: shape=(75, 100), dtype=float32, numpy=\narray([[0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 1., 1., 1.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.]], dtype=float32)>, 'distances': <tf.Tensor: shape=(75, 100), dtype=float32, numpy=\narray([[0.16691373, 0.16689317, 0.16688141, ..., 0.16571985, 0.16571985,\n        0.16571985],\n       [0.11168598, 0.11168598, 0.11168598, ..., 0.12310831, 0.12464748,\n        0.12598875],\n       [0.15854466, 0.15854466, 0.15854466, ..., 0.05286672, 0.05286673,\n        0.05286674],\n       ...,\n       [0.30689067, 0.30687487, 0.30686584, ..., 0.00161676, 0.00086005,\n        0.00086521],\n       [0.40294588, 0.40292755, 0.40291706, ..., 0.36882228, 0.36882228,\n        0.36882225],\n       [0.28616565, 0.28614676, 0.28613594, ..., 0.27256042, 0.27256042,\n        0.2725604 ]], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(75, 100), dtype=float32, numpy=\narray([[1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.],\n       ...,\n       [1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.],\n       [1., 1., 1., ..., 1., 1., 1.]], dtype=float32)>}\nidxs:  tf.Tensor(\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n 24], shape=(25,), dtype=int32)\nidxs:  tf.Tensor(\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n 24], shape=(25,), dtype=int32)\nidxs:  tf.Tensor(\n[25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48\n 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72\n 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96\n 97 98 99], shape=(75,), dtype=int32)\n  0%|                                                                                                                    | 0/1 [00:00<?, ?it/s]Updating the target actors and critics at train step 0\nTraining:   0%|                                                                                                          | 0/1 [00:00<?, ?it/s]terminate_idxes:  tf.Tensor([39], shape=(1,), dtype=int64)\nt_samples_init:  tf.Tensor([0], shape=(1,), dtype=int64)\nt_samples_future:  tf.Tensor([32], shape=(1,), dtype=int64)\ntransitions:  {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3316634e+00,  7.3029089e-01,  5.0018412e-01,  1.3318219e+00,\n         7.3155671e-01,  4.9650487e-01,  1.5851768e-04,  1.2658124e-03,\n        -3.6792576e-03,  2.5358455e-02]], dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3334664e+00,  7.3824292e-01,  5.0565857e-01,  1.3336586e+00,\n         7.3956817e-01,  5.0195110e-01,  1.9217092e-04,  1.3252455e-03,\n        -3.7074503e-03,  2.5372310e-02]], dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.05629849,  0.24030626,  0.16916928, -0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.08397178], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3318219 , 0.7315567 , 0.49650487]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3351363, 0.7455204, 0.5063209]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01,  1.3082603e+00,\n         6.1179483e-01,  4.2470208e-01, -3.3672366e-02, -1.3730551e-01,\n        -1.1002063e-01,  2.9183477e-06]], dtype=float32)>}\ntransitions:  {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3316634e+00,  7.3029089e-01,  5.0018412e-01,  1.3318219e+00,\n         7.3155671e-01,  4.9650487e-01,  1.5851768e-04,  1.2658124e-03,\n        -3.6792576e-03,  2.5358455e-02]], dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3334664e+00,  7.3824292e-01,  5.0565857e-01,  1.3336586e+00,\n         7.3956817e-01,  5.0195110e-01,  1.9217092e-04,  1.3252455e-03,\n        -3.7074503e-03,  2.5372310e-02]], dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.05629849,  0.24030626,  0.16916928, -0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.08397178], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3318219 , 0.7315567 , 0.49650487]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3351363, 0.7455204, 0.5063209]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01,  1.3082603e+00,\n         6.1179483e-01,  4.2470208e-01, -3.3672366e-02, -1.3730551e-01,\n        -1.1002063e-01,  2.9183477e-06]], dtype=float32)>}\ntrans : {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3316634e+00,  7.3029089e-01,  5.0018412e-01,  1.3318219e+00,\n         7.3155671e-01,  4.9650487e-01,  1.5851768e-04,  1.2658124e-03,\n        -3.6792576e-03,  2.5358455e-02]], dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3334664e+00,  7.3824292e-01,  5.0565857e-01,  1.3336586e+00,\n         7.3956817e-01,  5.0195110e-01,  1.9217092e-04,  1.3252455e-03,\n        -3.7074503e-03,  2.5372310e-02]], dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.05629849,  0.24030626,  0.16916928, -0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.08397178], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3318219 , 0.7315567 , 0.49650487]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3351363, 0.7455204, 0.5063209]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01,  1.3082603e+00,\n         6.1179483e-01,  4.2470208e-01, -3.3672366e-02, -1.3730551e-01,\n        -1.1002063e-01,  2.9183477e-06]], dtype=float32)>, 'goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'is_demo': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'is_sup': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'terminate_skills': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.]], dtype=float32)>}\ntransitions:  {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3316634e+00,  7.3029089e-01,  5.0018412e-01,  1.3318219e+00,\n         7.3155671e-01,  4.9650487e-01,  1.5851768e-04,  1.2658124e-03,\n        -3.6792576e-03,  2.5358455e-02]], dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[0., 0., 1.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3334664e+00,  7.3824292e-01,  5.0565857e-01,  1.3336586e+00,\n         7.3956817e-01,  5.0195110e-01,  1.9217092e-04,  1.3252455e-03,\n        -3.7074503e-03,  2.5372310e-02]], dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.05629849,  0.24030626,  0.16916928, -0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.08397178], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3318219 , 0.7315567 , 0.49650487]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.3351363, 0.7455204, 0.5063209]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3419327e+00,  7.4910039e-01,  5.3472275e-01,  1.3082603e+00,\n         6.1179483e-01,  4.2470208e-01, -3.3672366e-02, -1.3730551e-01,\n        -1.1002063e-01,  2.9183477e-06]], dtype=float32)>, 'goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.341205  , 0.77160776, 0.42469975]], dtype=float32)>, 'is_demo': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'is_sup': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'terminate_skills': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.]], dtype=float32)>}\nterminate_idxes:  tf.Tensor([35], shape=(1,), dtype=int64)\nt_samples_init:  tf.Tensor([0], shape=(1,), dtype=int64)\nt_samples_future:  tf.Tensor([15], shape=(1,), dtype=int64)\ntransitions:  {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3654968 ,  0.76982594,  0.520304  ,  1.4816936 ,  0.865465  ,\n         0.42473605,  0.11619698,  0.09563906, -0.09556797,  0.01971239]],\n      dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3880703 ,  0.78922963,  0.50674796,  1.4816936 ,  0.865465  ,\n         0.42475677,  0.09362336,  0.07623535, -0.08199119,  0.05343271]],\n      dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.6971818 ,  0.5738344 , -0.39340782,  0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.40860868], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.865465  , 0.42473605]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.8654649 , 0.42478448]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01,\n         1.48169374e+00,  8.65464985e-01,  4.24702078e-01,\n         1.39761046e-01,  1.16364606e-01, -1.10020630e-01,\n         2.91834772e-06]], dtype=float32)>}\ntransitions:  {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3654968 ,  0.76982594,  0.520304  ,  1.4816936 ,  0.865465  ,\n         0.42473605,  0.11619698,  0.09563906, -0.09556797,  0.01971239]],\n      dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3880703 ,  0.78922963,  0.50674796,  1.4816936 ,  0.865465  ,\n         0.42475677,  0.09362336,  0.07623535, -0.08199119,  0.05343271]],\n      dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.6971818 ,  0.5738344 , -0.39340782,  0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.40860868], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.865465  , 0.42473605]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.8654649 , 0.42478448]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01,\n         1.48169374e+00,  8.65464985e-01,  4.24702078e-01,\n         1.39761046e-01,  1.16364606e-01, -1.10020630e-01,\n         2.91834772e-06]], dtype=float32)>}\ntrans : {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3654968 ,  0.76982594,  0.520304  ,  1.4816936 ,  0.865465  ,\n         0.42473605,  0.11619698,  0.09563906, -0.09556797,  0.01971239]],\n      dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3880703 ,  0.78922963,  0.50674796,  1.4816936 ,  0.865465  ,\n         0.42475677,  0.09362336,  0.07623535, -0.08199119,  0.05343271]],\n      dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.6971818 ,  0.5738344 , -0.39340782,  0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.40860868], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.865465  , 0.42473605]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.8654649 , 0.42478448]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01,\n         1.48169374e+00,  8.65464985e-01,  4.24702078e-01,\n         1.39761046e-01,  1.16364606e-01, -1.10020630e-01,\n         2.91834772e-06]], dtype=float32)>, 'goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'is_demo': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'is_sup': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'terminate_skills': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.]], dtype=float32)>}\ntransitions:  {'prev_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'prev_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3654968 ,  0.76982594,  0.520304  ,  1.4816936 ,  0.865465  ,\n         0.42473605,  0.11619698,  0.09563906, -0.09556797,  0.01971239]],\n      dtype=float32)>, 'env_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'curr_skills': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1., 0., 0.]], dtype=float32)>, 'states_2': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.3880703 ,  0.78922963,  0.50674796,  1.4816936 ,  0.865465  ,\n         0.42475677,  0.09362336,  0.07623535, -0.08199119,  0.05343271]],\n      dtype=float32)>, 'actions': <tf.Tensor: shape=(1, 4), dtype=float32, numpy=\narray([[ 0.6971818 ,  0.5738344 , -0.39340782,  0.1       ]],\n      dtype=float32)>, 'successes': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.], dtype=float32)>, 'distances': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([0.40860868], dtype=float32)>, 'has_gt_skill': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'achieved_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.865465  , 0.42473605]], dtype=float32)>, 'her_goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.4816936 , 0.8654649 , 0.42478448]], dtype=float32)>, 'init_states': <tf.Tensor: shape=(1, 10), dtype=float32, numpy=\narray([[ 1.34193265e+00,  7.49100387e-01,  5.34722745e-01,\n         1.48169374e+00,  8.65464985e-01,  4.24702078e-01,\n         1.39761046e-01,  1.16364606e-01, -1.10020630e-01,\n         2.91834772e-06]], dtype=float32)>, 'goals': <tf.Tensor: shape=(1, 3), dtype=float32, numpy=array([[1.2709612 , 0.83784884, 0.7737413 ]], dtype=float32)>, 'is_demo': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'is_sup': <tf.Tensor: shape=(1,), dtype=float32, numpy=array([1.], dtype=float32)>, 'terminate_skills': <tf.Tensor: shape=(1, 1), dtype=float32, numpy=array([[0.]], dtype=float32)>}\nlog_probs:  tf.Tensor([6.4287367], shape=(1,), dtype=float32)\nmu:  tf.Tensor([[ 0.07044439  0.16279759  0.09762228 -0.05882182]], shape=(1, 4), dtype=float32)\nactions:  tf.Tensor([[ 0.00344238  0.12288915  0.14652866 -0.02851657]], shape=(1, 4), dtype=float32)\nlog_probs:  tf.Tensor([[6.4287367]], shape=(1, 1), dtype=float32)\nOrthogonal Regularization: 0.04225972667336464\nloss/pi:  tf.Tensor(0.828086, shape=(), dtype=float32)\npenalty/pi_ortho_penalty:  tf.Tensor(0.042259727, shape=(), dtype=float32)\navg_loss_dict:  {'loss/pi': <tf.Tensor: shape=(), dtype=float32, numpy=0.828086>, 'penalty/pi_ortho_penalty': <tf.Tensor: shape=(), dtype=float32, numpy=0.042259727>}",
    "test_case1": ""
}